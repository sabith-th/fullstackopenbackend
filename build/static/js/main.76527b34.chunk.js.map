{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/contactsService.js","App.js","index.js"],"names":["Filter","onChange","Notification","notification","message","status","className","PersonForm","addNewContact","persons","updateContact","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","e","preventDefault","name","duplicate","find","person","toLowerCase","window","confirm","id","number","value","target","type","Person","onDelete","onClick","Persons","map","key","buildPersonsList","axios","get","then","response","data","newContact","post","delete","contact","put","App","setPersons","searchResult","setSearchResult","setNotification","useEffect","contactsService","createNotification","setTimeout","result","filter","includes","savedContact","catch","error","console","updatedContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76527b34.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ onChange }) => {\n  return (\n    <div>\n      search: <input onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ notification: { message, status } }) => {\n  return (\n    <div className={status === \"success\" ? \"success\" : \"error\"}>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\n\nconst PersonForm = ({ addNewContact, persons, updateContact }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const findDuplicate = name =>\n    persons.find(person => person.name.toLowerCase() === name.toLowerCase());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const duplicate = findDuplicate(newName);\n\n    if (duplicate) {\n      const confirm = window.confirm(`Update ${newName} contact info?`);\n      if (confirm) {\n        updateContact(duplicate.id, { ...duplicate, number: newNumber });\n      }\n    } else {\n      addNewContact(newName, newNumber);\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:{\" \"}\n        <input value={newName} onChange={e => setNewName(e.target.value)} />\n      </div>\n      <div>\n        phone:{\" \"}\n        <input value={newNumber} onChange={e => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, onDelete }) => {\n  const handleClick = () => {\n    const confirm = window.confirm(\n      `Are you sure you want to delete ${person.name}?`\n    );\n    if (confirm) {\n      onDelete(person);\n    }\n  };\n\n  return (\n    <div>\n      {person.name} {person.number}\n      <button onClick={handleClick}>Delete Contact </button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, onDelete }) => {\n  const buildPersonsList = persons =>\n    persons.map(person => (\n      <Person key={person.id} person={person} onDelete={onDelete} />\n    ));\n\n  return <div>{buildPersonsList(persons)}</div>;\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst BASE_URL = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(BASE_URL).then(response => response.data);\n};\n\nconst saveContact = newContact => {\n  return axios.post(BASE_URL, newContact).then(response => response.data);\n};\n\nconst deleteContact = id => {\n  return axios.delete(`${BASE_URL}/${id}`);\n};\n\nconst updateContact = (id, contact) => {\n  return axios\n    .put(`${BASE_URL}/${id}`, contact)\n    .then(response => response.data);\n};\n\nexport default { getAll, saveContact, deleteContact, updateContact };\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport contactsService from \"./services/contactsService\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [searchResult, setSearchResult] = useState(null);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    contactsService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const createNotification = (message, status) => {\n    setNotification({\n      message,\n      status\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 3000);\n  };\n\n  const searchName = e => {\n    const result = persons.filter(person =>\n      person.name.toLowerCase().includes(e.target.value.toLowerCase())\n    );\n    setSearchResult([...result]);\n  };\n\n  const addNewContact = (newName, newNumber) => {\n    const newContact = {\n      name: newName,\n      number: newNumber\n    };\n    contactsService\n      .saveContact(newContact)\n      .then(savedContact => {\n        setPersons([...persons, savedContact]);\n        createNotification(`${newName} added to contact`, \"success\");\n      })\n      .catch(e => {\n        if (e.response.status === 400) {\n          createNotification(e.response.data.error, \"error\");\n        } else {\n          console.error(e);\n        }\n      });\n    setSearchResult(null);\n  };\n\n  const deletePerson = ({ id, name }) => {\n    contactsService\n      .deleteContact(id)\n      .then(response => {\n        if (response.status === 204) {\n          setPersons(persons.filter(person => person.id !== id));\n          createNotification(`${name} deleted from contact`, \"success\");\n        }\n      })\n      .catch(e => {\n        if (e.response.status === 404) {\n          createNotification(\n            `${name} contact details not found on server`,\n            \"error\"\n          );\n          setPersons(persons.filter(person => person.id !== id));\n        } else if (e.response.status === 400) {\n          createNotification(e.response.data.error, \"error\");\n        } else {\n          console.error(e);\n        }\n      });\n  };\n\n  const updateContact = (id, contact) => {\n    contactsService\n      .updateContact(id, contact)\n      .then(updatedContact => {\n        setPersons(\n          persons.map(person => (person.id !== id ? person : updatedContact))\n        );\n        createNotification(`${contact.name} contact info updated`, \"success\");\n      })\n      .catch(e => {\n        if (e.response.status === 400) {\n          createNotification(e.response.data.error, \"error\");\n        } else {\n          console.error(e);\n        }\n      });\n\n    setSearchResult(null);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notification !== null ? (\n        <Notification notification={notification} />\n      ) : null}\n      <Filter onChange={searchName} />\n      <PersonForm\n        addNewContact={addNewContact}\n        persons={persons}\n        updateContact={updateContact}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={searchResult !== null ? searchResult : persons}\n        onDelete={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}